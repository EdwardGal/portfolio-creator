@use "sass:math";
//========================================================================================================================================================
@import "base/mixins";
//========================================================================================================================================================

//Кастомные Шрифты

//@import 'fonts/fonts';
//========================================================================================================================================================
@import url(https://fonts.googleapis.com/css?family=Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic&display=swap);
//&display=swap
//========================================================================================================================================================
$mainColor: #000;
$whiteColor: #fff;
$darkBlack: #121212;
$greyColor: #666;
//========================================================================================================================================================

$fontFamily: "Roboto";
$fontSize: toRem(14);

//========================================================================================================================================================

// Минимальная ширина сторон
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина окружающего контейнера (0 = небольшое пространство)
$maxWidthContainer: 1215;
// Закрытый вход в контейнер
// (30 = по 15px леворучка и правая ручка, 0 = не больше отступа)
$containerPadding: 30;

// Ширина распределения первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты,  телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S
// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинту (контейнер изменяет свою ширину по брейк-поинту)
$responsiveType: 1;
//========================================================================================================================================================
@import "base/null";
//========================================================================================================================================================

body {
   // Скролл заблокировано
   .lock & {
      overflow: hidden;
      touch-action: none;
      overscroll-behavior: none;
   }
   // Сайт загружен
   .loaded & {
   }
}
//========================================================================================================================================================
.wrapper {
   min-height: 100%;
   display: flex;
   flex-direction: column;
   overflow: hidden;
   @supports (overflow: clip) {
      overflow: clip;
   }
   // Прижимаем футер к низу
   > main {
      flex: 1 1 auto;
   }
   // фикс для слайдера
   > * {
      min-width: 0;
   }
}

//========================================================================================================================================================

@if ($responsiveType==1) {
   //  отзывчивая
   [class*="__container"] {
      @if ($maxWidthContainer>0) {
         max-width: toRem($containerWidth);
         margin: 0 auto;
      }
      @if ($containerPadding>0) {
         @if ($maxWidthContainer>0) {
            padding: 0 toRem(math.div($containerPadding, 2));
         } @else {
            @include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
            @include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
         }
      }
   }
} @else {
   // Брейк-поинты
   [class*="__container"] {
      margin: 0 auto;
      @if ($maxWidthContainer>0) {
         max-width: toRem($containerWidth);
      } @else {
         @if ($containerPadding>0) {
            padding: 0 toRem(math.div($containerPadding, 2));
         }
      }
      @media (max-width: $pc) {
         max-width: toRem(970);
      }
      @media (max-width: $tablet) {
         max-width: toRem(750);
      }
      @media (max-width: $mobile) {
         max-width: none;
         @if ($containerPadding>0 and $maxWidthContainer>0) {
            padding: 0 toRem(math.div($containerPadding, 2));
         }
      }
   }
}

//========================================================================================================================================================

@import "base";
//========================================================================================================================================================
@import "base/common";
//========================================================================================================================================================
@import "components/header";
@import "components/footer";
//========================================================================================================================================================
@import "home";
